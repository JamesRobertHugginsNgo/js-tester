const jsTester=(e,s)=>((e,s)=>{const t=[];return{test(e,s){return t.push({label:e,code:s}),this},promise(o){o&&"object"==typeof o||(o={});let{value:l={}}=o,n=Promise.resolve(l).then((()=>(console.log(e),s(l)))).then(((e=l)=>{l=e}));for(let e=0,s=t.length;e<s;e++){const s=t[e],{label:o,code:r}=s;n=n.then((()=>(console.log(`  ${o}`),r(l)))).then((e=>{e?console.log("    %c✔ Passed","color: green;"):console.log("    %c✖ Failed","color: red;"),Object.assign(s,{passed:e})}))}return n.then((()=>{const{testers:s=[]}=o;return s.push({label:e,value:l,tests:t}),{value:l,testers:s}}))}}})(e,s);
//# sourceMappingURL=js-tester.min.js.map
