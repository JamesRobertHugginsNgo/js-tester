const jsTester=(()=>{function e(n){if(n instanceof Promise)return n.then((n=>e(n)));n?console.log("    %c✔ Passed","color: green;"):console.log("    %c✖ Failed","color: red;")}return function n(...t){if(1===t.length)return n(null,...t);if(2===t.length)return n({},...t);const[r,o,s]=t,c=[];return{test(...n){if(1===n.length)return this.test(null,...n);const[t,r]=n;return c.push((n=>(t&&console.log(`  ${t}`),e(r(n))))),this},callback(e=r){o&&console.log(o);let n=s(e);n instanceof Promise?n=n.then(((n=e)=>{e=n})):e=n;for(let t=0,r=c.length;t<r;t++){const r=c[t];n=n instanceof Promise?n.then((()=>r(e))):r(e)}return n instanceof Promise?n.then((()=>e)):e},end(){return this.callback()},promise(){try{const e=this.end();return e instanceof Promise?e:Promise.resolve(e)}catch(e){return Promise.reject(e)}}}}})();
//# sourceMappingURL=js-tester.min.js.map
