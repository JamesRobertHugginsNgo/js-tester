let jsTester;{const e=e=>{e?console.log("    %c✔ Passed","color: green;"):console.log("    %c✖ Failed","color: red;")};jsTester=(...n)=>{if(1===n.length)return jsTester(null,...n);if(2===n.length)return jsTester({},...n);const[s,t,o]=n,r=[];return{test(...e){if(1===e.length)return this.test(null,...e);const[n,s]=e;return r.push((e=>(n&&console.log(`  ${n}`),s(e)))),this},func:()=>(n=s)=>{t&&console.log(t);let i=o(n);i instanceof Promise?i=i.then(((e=n)=>{n=e})):n=i;for(let s=0,t=r.length;s<t;s++){const t=r[s];if(i instanceof Promise)i=i.then((()=>t(n)));else{const e=t(n);e instanceof Promise?(i instanceof Promise||(i=Promise.resolve()),i=i.then((()=>e))):i=e}i instanceof Promise?i=i.then(e):e(i)}return i instanceof Promise?i.then((()=>n)):n},end(){return this.func()()},promise(){const e=this.end();return e instanceof Promise?e:Promise.resolve().then((()=>e))}}}}export default jsTester;
//# sourceMappingURL=js-tester.min.js.map
