const jsTester=(()=>{const e=e=>{e?console.log("    %c✔ Passed","color: green;"):console.log("    %c✖ Failed","color: red;")};return(...n)=>{if(1===n.length)return jsTester(null,...n);if(2===n.length)return jsTester({},...n);const[t,s,o]=n,r=[];return{test(...e){if(1===e.length)return this.test(null,...e);const[n,t]=e;return r.push((e=>(n&&console.log(`  ${n}`),t(e)))),this},func:()=>(n=t)=>{s&&console.log(s);let i=o(n);i instanceof Promise?i=i.then(((e=n)=>{n=e})):n=i;for(let t=0,s=r.length;t<s;t++){const s=r[t];if(i instanceof Promise)i=i.then((()=>s(n)));else{const e=s(n);e instanceof Promise?(i instanceof Promise||(i=Promise.resolve()),i=i.then((()=>e))):i=e}i instanceof Promise?i=i.then(e):e(i)}return i instanceof Promise?i.then((()=>n)):n},end(){return this.func()()},promise(){const e=this.end();return e instanceof Promise?e:Promise.resolve().then((()=>e))}}}})();export default jsTester;
//# sourceMappingURL=js-tester.min.js.map
