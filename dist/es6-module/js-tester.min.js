const jsTester=(()=>{function e(e){e?console.log("    %c✔ Passed","color: green;"):console.log("    %c✖ Failed","color: red;")}return function n(...t){if(1===t.length)return n(null,...t);if(2===t.length)return n({},...t);const[o,s,r]=t,i=[];return{test(...e){if(1===e.length)return this.test(null,...e);const[n,t]=e;return i.push((e=>(n&&console.log(`  ${n}`),t(e)))),this},func:()=>(n=o)=>{s&&console.log(s);let t=r(n);t instanceof Promise?t=t.then(((e=n)=>{n=e})):n=t;for(let o=0,s=i.length;o<s;o++){const s=i[o];if(t instanceof Promise)t=t.then((()=>s(n)));else{const e=s(n);e instanceof Promise?(t instanceof Promise||(t=Promise.resolve()),t=t.then((()=>e))):t=e}t instanceof Promise?t=t.then(e):e(t)}return t instanceof Promise?t.then((()=>n)):n},end(){return this.func()()},promise(){const e=this.end();return e instanceof Promise?e:Promise.resolve().then((()=>e))}}}})();export default jsTester;
//# sourceMappingURL=js-tester.min.js.map
