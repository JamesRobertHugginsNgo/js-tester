const jsTester=(e,t)=>((e,t)=>{const s=[];return{test(e,t){return s.push({label:e,code:t}),this},promise(o){o&&"object"==typeof o||(o={});let{value:l={}}=o,r=Promise.resolve(l).then((()=>(console.log(e),t(l)))).then(((e=l)=>{l=e}));for(let e=0,t=s.length;e<t;e++){const t=s[e],{label:o,code:n}=t;r=r.then((()=>(console.log(`  ${o}`),n(l)))).then((e=>{e?console.log("    %c✔ Passed","color: green;"):console.log("    %c✖ Failed","color: red;"),Object.assign(t,{passed:e})}))}return r.then((()=>{const{testers:t=[]}=o;return t.push({label:e,value:l,tests:s}),{value:l,testers:t}}))}}})(e,t);export default jsTester;
//# sourceMappingURL=js-tester.min.js.map
