const jsTester=(()=>{function e(t){if(t instanceof Promise)return t.then((t=>e(t)));t?console.log("    %c✔ Passed","color: green;"):console.log("    %c✖ Failed","color: red;")}return function t(...n){if(1===n.length)return t(null,...n);if(2===n.length)return t({},...n);const[r,o,s]=n,c=[];return{test(...t){if(1===t.length)return this.test(null,...t);const[n,r]=t;return c.push((t=>(n&&console.log(`  ${n}`),e(r(t))))),this},callback(e=r){o&&console.log(o);let t=s(e);t instanceof Promise?t=t.then(((t=e)=>{e=t})):e=t;for(let n=0,r=c.length;n<r;n++){const r=c[n];t=t instanceof Promise?t.then((()=>r(e))):r(e)}return t instanceof Promise?t.then((()=>e)):e},end(){return this.callback()},promise(){try{const e=this.end();return e instanceof Promise?e:Promise.resolve(e)}catch(e){return Promise.reject(e)}}}}})();export default jsTester;
//# sourceMappingURL=js-tester.min.js.map
